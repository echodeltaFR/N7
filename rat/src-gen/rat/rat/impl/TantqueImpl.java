/**
 * generated by Xtext 2.12.0
 */
package rat.rat.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import rat.rat.Bloc;
import rat.rat.E;
import rat.rat.RatPackage;
import rat.rat.Tantque;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Tantque</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link rat.rat.impl.TantqueImpl#getCondt <em>Condt</em>}</li>
 *   <li>{@link rat.rat.impl.TantqueImpl#getBoucle <em>Boucle</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TantqueImpl extends IImpl implements Tantque
{
  /**
   * The cached value of the '{@link #getCondt() <em>Condt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondt()
   * @generated
   * @ordered
   */
  protected E condt;

  /**
   * The cached value of the '{@link #getBoucle() <em>Boucle</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoucle()
   * @generated
   * @ordered
   */
  protected Bloc boucle;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TantqueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RatPackage.Literals.TANTQUE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public E getCondt()
  {
    return condt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCondt(E newCondt, NotificationChain msgs)
  {
    E oldCondt = condt;
    condt = newCondt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RatPackage.TANTQUE__CONDT, oldCondt, newCondt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCondt(E newCondt)
  {
    if (newCondt != condt)
    {
      NotificationChain msgs = null;
      if (condt != null)
        msgs = ((InternalEObject)condt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RatPackage.TANTQUE__CONDT, null, msgs);
      if (newCondt != null)
        msgs = ((InternalEObject)newCondt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RatPackage.TANTQUE__CONDT, null, msgs);
      msgs = basicSetCondt(newCondt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RatPackage.TANTQUE__CONDT, newCondt, newCondt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Bloc getBoucle()
  {
    return boucle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBoucle(Bloc newBoucle, NotificationChain msgs)
  {
    Bloc oldBoucle = boucle;
    boucle = newBoucle;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RatPackage.TANTQUE__BOUCLE, oldBoucle, newBoucle);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBoucle(Bloc newBoucle)
  {
    if (newBoucle != boucle)
    {
      NotificationChain msgs = null;
      if (boucle != null)
        msgs = ((InternalEObject)boucle).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RatPackage.TANTQUE__BOUCLE, null, msgs);
      if (newBoucle != null)
        msgs = ((InternalEObject)newBoucle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RatPackage.TANTQUE__BOUCLE, null, msgs);
      msgs = basicSetBoucle(newBoucle, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RatPackage.TANTQUE__BOUCLE, newBoucle, newBoucle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RatPackage.TANTQUE__CONDT:
        return basicSetCondt(null, msgs);
      case RatPackage.TANTQUE__BOUCLE:
        return basicSetBoucle(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RatPackage.TANTQUE__CONDT:
        return getCondt();
      case RatPackage.TANTQUE__BOUCLE:
        return getBoucle();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RatPackage.TANTQUE__CONDT:
        setCondt((E)newValue);
        return;
      case RatPackage.TANTQUE__BOUCLE:
        setBoucle((Bloc)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RatPackage.TANTQUE__CONDT:
        setCondt((E)null);
        return;
      case RatPackage.TANTQUE__BOUCLE:
        setBoucle((Bloc)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RatPackage.TANTQUE__CONDT:
        return condt != null;
      case RatPackage.TANTQUE__BOUCLE:
        return boucle != null;
    }
    return super.eIsSet(featureID);
  }

} //TantqueImpl
